document.addEventListener("DOMContentLoaded",()=>{var tomitProductInventoryInfo={};tomitProductInventoryInfo.showCurrentVariantInformation=function(){},tomitProductInventoryInfo.requestCustomerLocation=function(){},tomitProductInventoryInfo.getProductsInventoryInformation=function(){},tomitProductInventoryInfo.listInventory=function(){},tomitProductInventoryInfo.loadedProducts=[];class ProductInventoryInfo{originalATCButtonHTML=null;cart=null;initialized=!1;data={variants:{}};constructor(){console.debug("Starting..."),document.readyState==="complete"||document.readyState==="loaded"?(console.debug("DOM already loaded, init..."),this.init()):(console.debug("DOM not loaded, waiting for DOMContentLoaded event..."),window.addEventListener("DOMContentLoaded",()=>{this.init()}),this.delayedInit())}delayedInit(){console.debug("Delayed init..."),setTimeout(()=>{document.readyState==="complete"||document.readyState==="loaded"?this.init():this.delayedInit()},1e3)}async init(){try{if(console.debug("Init..."),this.initialized)return;this.initialized=!0,await this.fetchSettings(),this.applyCustomStyles(),this.setVariantChangeEvents(),window.addEventListener("locationchange",()=>{console.debug(`Location change event ${location.href}`),this.isProductPage()&&this.processProductVariant()}),this.isProductPage()&&await this.processProductVariant(),this.isCartPage()&&(this.settings.cartShowInventory&&await this.processVariantList(),this.settings.cartWarningMultiplePickupEnabled&&await this.showCartWarningMultiplePickup(),this.settings.cartWarningInvalidLocationEnabled&&await this.showCartWarningOneLocation()),await this.processVariantList(),this.dispatchLoadedEvent()}catch(e){this.bugsnagNotify(e)}}dispatchLoadedEvent(){var ev=new CustomEvent("tomitLoaded",{detail:{message:"Inventory Information Loaded"},bubbles:!0,cancelable:!0});console.debug("Dispatching tomitLoaded event..."),document.dispatchEvent(ev)}fetchShopCartItems(){return this.cart?this.cart:fetch("/cart.js").then(response=>response.json()).then(res=>(this.cart=res,res))}getShop(){return Shopify.shop}apiBase(){return["teststore43232432.myshopify.com"].includes(this.getShop())?"https://jtc-inventory-info.ap.ngrok.io":"https://api.shopify-inventory.jtcinteractive.com"}async fetchSettings(){const url=`${this.apiBase()}/shop/${this.getShop()}/settings`;return fetch(url).then(response=>response.json()).then(res=>(this.settings=res.settings,res))}getVariantLocations(variantID,lat,lon){const url=`${this.apiBase()}/shop/${this.getShop()}/variant_locations/${variantID}?lat=${lat}&lon=${lon}`;if(isNaN(variantID)||variantID<1e3){console.debug("Invalid variant ID: "+variantID);return}return console.debug("Fetching locations for variant "+variantID+"..."),fetch(url).then(response=>response.json()).then(res=>(this.data.variants[variantID]={locations:res.locations,settings:res.settings},this.dispatchVariantLocationsLoadedEvent(variantID,res.locations),res.locations))}dispatchVariantLocationsLoadedEvent(variantID,locations){var ev=new CustomEvent("jtcVariantLocationsLoaded",{detail:{message:"Variant locations loaded",variantID,locations},bubbles:!0,cancelable:!0});console.debug(`Dispatching jtcVariantLocationsLoaded event for ${variantID}...`),document.dispatchEvent(ev)}filterLocations(locations){locations=locations.filter(location2=>location2.enabled),this.settings.hideEmptyLocations&&(locations=locations.filter(location2=>location2.stock>0)),locations=locations.filter(location2=>location2.maxDistance===null||location2.maxDistance===0||location2.distance<=location2.maxDistance),locations=this.geoFilterLocations(locations),this.settings.groupedLocationsEnable&&(console.debug("Adding grouped locations..."),locations=this.groupedLocation(locations).concat(locations));const primaryLocation=locations.find(location2=>location2.primary);return primaryLocation&&primaryLocation.stock>0&&(console.debug("Setting primary location: ",primaryLocation),locations=[primaryLocation]),this.settings.geoSortLocations?locations=locations.sort((a,b)=>a.distance-b.distance):locations=locations.sort((a,b)=>a.order-b.order),console.debug("Filtered locations: ",locations.length),locations}geoFilterLocations(locations){const{userCountryCode}=this.settings;return locations.filter(location2=>location2.geoWhiteList&&location2.geoWhiteList.length>0&&!location2.geoWhiteList.includes(userCountryCode)?!1:!(location2.geoBlackList&&location2.geoBlackList.length>0&&location2.geoBlackList.includes(userCountryCode)))}groupedLocation(locations){return[{id:"grouped",name:this.settings.groupedLocationsContent||"Grouped",stock:locations.reduce((acc,location2)=>acc+location2.stock,0),order:-1}]}hideInventoryBlock(container){if(this.settings.noInventoryHide){console.debug("hideInventoryBlock: partial");const locationsBlock=container.querySelector("#tomit_inventory_list");locationsBlock&&container.removeChild(locationsBlock),this.settings.noInventoryTextContent||(console.debug("hideInventoryBlock: full"),container.style.display="none")}}displayUnavailableText(container){this.settings.noInventoryTextContent&&(console.debug("displayUnavailableText: true"),container.innerHTML+='<span class="tomitUnavailable">'+this.settings.noInventoryTextContent+"</span>")}hasAnyStock(locations){locations=this.filterLocations(locations);for(const location2 of locations)if(location2.stock>0)return console.debug("Has stock"),!0;return console.debug("No stock"),!1}stockText(stock,noHtml=!1){const{displayLocStockText}=this.settings;if(this.settings.useThresholdValues==!1||displayLocStockText.length===0)return stock;const stockLevel=displayLocStockText.find(locIndex=>locIndex.amount>=stock||locIndex.amount===null&&locIndex.id>0);return stockLevel?noHtml?stockLevel.text:`
        <span class='tomitInStock threshold-${displayLocStockText.indexOf(stockLevel)} tomItInventoryLocationHighStock'">
          ${stockLevel.text}
        </span>
      `:stock}renderLocations(container,locations){console.debug("renderLocations");let locationsHTML="<ul id='tomit_inventory_list'>";locations.forEach(location2=>{locationsHTML+=`
        <li data-loc="${location2.id}" class='tomitIsInStock'>
          <small>
            <span class='location'>${location2.name}:</span>
      `,this.settings.geoShowDistance&&location2.distance&&(locationsHTML+=`
            <span class='distance'>(${location2.distance} ${this.settings.geoDistanceUnit})</span>`),locationsHTML+=`
            <strong class="stockCount">
              ${this.stockText(location2.stock)}
            </strong>
          </small>
        </li>`}),locationsHTML+="</ul>",container.innerHTML=locationsHTML,container.style.display="block"}renderPickupLocationsDropdown(container,locations){console.debug("renderPickupLocationsDropdown");const selectedLoc=localStorage.getItem("TomITSelectedLocation"),options=[];locations.forEach(location2=>{const selectOption=document.createElement("option");selectOption.text=location2.name+" - "+this.stockText(location2.stock,!0),selectOption.value="pickup "+location2.name,selectOption.dataset.loc=location2.id,location2.stock<=0?selectOption.disabled=!0:selectedLoc==="pickup "+location2.name&&(selectOption.selected=!0),options.push(selectOption)});const selectEl=document.createElement("select");if(selectEl.onchange=this.changePickupEventHandler,selectEl.name="properties[Shipping Option]",!this.settings.pickupShipToMeHide){const firstOption=document.createElement("option");firstOption.text=this.settings.pickupShipToMeText,selectEl.appendChild(firstOption)}options.forEach(option=>{selectEl.appendChild(option)}),container.innerHTML="",container.prepend(selectEl)}changePickupEventHandler(e){localStorage.setItem("TomITSelectedLocation",e.target.value)}renderPickupLocations(container,locations){console.debug("renderPickupLocations");const selectedGlobalLocation=localStorage.getItem("TomITGlobalSelectedLocation"),selectedLoc=localStorage.getItem("TomITSelectedLocation");if(this.settings.pickupUseDropdown){this.renderPickupLocationsDropdown(container,locations);return}const options=[];if(locations.forEach(location2=>{let pickupDisabled="",pickupStyle="";var checked="";location2.stock<=0&&(pickupDisabled="disabled",pickupStyle='style="opacity:.8";'),selectedLoc==="pickup "+location2.name&&location2.stock>0&&(selectedGlobalLocation==null||selectedGlobalLocation===location2.id)&&(checked="checked");const radioSelectBtn=`<input type="radio" name="properties[Shipping Option]" value="pickup ${location2.name}" ${pickupDisabled} onClick="this.changePickupEventHandler(event)" ${checked} />`,item=`<li><label ${pickupStyle}>${radioSelectBtn} ${location2.name}: <strong>${this.stockText(location2.stock)}</strong></label></li>`;options.push(item)}),container.innerHTML=options.join(""),!this.settings.pickupShipToMeHide){const shipToMeRadio=document.createElement("li");console.debug("pickupShipToMeText: "+this.settings.pickupShipToMeText),shipToMeRadio.innerHTML=`<label><input type="radio" name="properties[Shipping Option]" value="Ship To Me" checked="checked">${this.settings.pickupShipToMeText}</label>`,container.prepend(shipToMeRadio)}}isVisible(element){return window.getComputedStyle(element).display!=="none"}getAtcButton(){const that=this;let atcBtn=document.querySelector("form[action='/cart/add'] button[name='add']")==null?document.querySelector("form[action='/cart/add'] input[name='add']"):document.querySelector("form[action='/cart/add'] button[name='add']");if((!atcBtn||!that.isVisible(atcBtn))&&(atcBtn=document.querySelector("button[name='add']")==null?document.querySelector("form input[name='add']"):document.querySelector("button[name='add']")),!atcBtn||!that.isVisible(atcBtn)){var elements=Array.from(document.querySelectorAll("*")),searchedText="add to cart";elements.some(function(element){var text=element.textContent.trim();if(text.toLowerCase().includes(searchedText.toLowerCase())&&element.tagName.toLowerCase()==="button"&&that.isVisible(element))return atcBtn=element,!0})}if(!atcBtn){this.bugsnagNotify("Unable to find ATC button");return}return atcBtn}enableAtcButton(atcBtn){console.debug("enableAtcButton"),atcBtn.removeAttribute("disabled"),atcBtn.innerHTML=this.originalATCButtonHTML}disableAtcButton(atcBtn,disableText){console.debug(`disableAtcButton using text: ${disableText}`),atcBtn.setAttribute("disabled","disabled"),atcBtn.innerHTML=`<span>${disableText}</span>`}updateATCButton(locations){let atcBtn=this.getAtcButton();if(this.settings.geoATCNoInventoryDisable||this.settings.displayNoAnyStockDisable){if(!atcBtn)return;this.originalATCButtonHTML||(console.debug("Saving original ATC button HTML"),this.originalATCButtonHTML=atcBtn.innerHTML)}const variantID=this.getVariantId(),sellOutOfStock=this.continueSellingOutOfStock(variantID),isTracked=this.isTracked(variantID);console.debug(`sellOutOfStock: ${sellOutOfStock}`),console.debug(`isTracked: ${isTracked}`),this.settings.displayNoAnyStockDisable&&(!this.hasAnyStock(locations)&&!sellOutOfStock&&isTracked?(console.debug("displayNoAnyStockDisable: disable"),this.disableAtcButton(atcBtn,this.settings.displayNoAnyStockText)):(console.debug("displayNoAnyStockDisable: enable"),this.enableAtcButton(atcBtn))),this.settings.geoATCNoInventoryDisable&&locations.length>0&&(locations.sort((a,b)=>a.distance-b.distance)[0].stock<=0&&isTracked?(console.debug("geoATCNoInventoryDisable: disable"),this.disableAtcButton(atcBtn,this.settings.geoATCNoInventoryText)):(console.debug("geoATCNoInventoryDisable: enable"),this.enableAtcButton(atcBtn)))}continueSellingOutOfStock(variantID){const variant=this.data.variants[variantID];return variant?variant.settings.continueSellingOutOfStock:!1}isTracked(variantID){const variant=this.data.variants[variantID];return variant?variant.settings.tracked:!1}async requestPosition(){var options={enableHighAccuracy:!0,timeout:5e3,maximumAge:0};return new Promise(function(resolve,reject){navigator.geolocation.getCurrentPosition(pos=>{resolve(pos)},err=>{reject(err)},options)})}async getGeoLocation(){if(!this.settings.geoUseBrowserLoc||!("geolocation"in navigator))return console.debug("Geo location disabled or not supported"),[0,0];let position;try{return position=await this.requestPosition(),[position.coords.latitude,position.coords.longitude]}catch(error){return console.debug(`Error getting position: ${error}`),[0,0]}}getVariantId(){let variantId=new URLSearchParams(window.location.search).get("variant");if(variantId)return variantId;if(ShopifyAnalytics&&ShopifyAnalytics.meta)try{const atcForm=document.querySelector("form[action='/cart/add']"),variants=ShopifyAnalytics.meta.product.variants;return atcForm&&(variantId=variants.find(variant=>{let variantInput=atcForm.querySelector(`input[type='hidden'][value='${variant.id}']`);if(variantInput)return variantInput.value}),variantId||(variantId=variants.find(variant=>{let variantInput=atcForm.querySelector(`option[data-variant-id='${variant.id}'][selected]`);if(variantInput)return variantInput.value})),variantId||(variantId=variants.find(variant=>{let variantInput=atcForm.querySelector(`option[value='${variant.id}'][selected]`);if(variantInput)return variantInput.value}))),variantId||(variantId=variants[0]),variantId.id}catch(e){this.bugsnagNotify(e)}return variantId}isCartPage(){return window.location.href.search("cart")>-1}isProductPage(){return window.location.href.search("/products/")>-1}isCollectionPage(){if(window.location.href.search("collections")>0)return window.location.href.search("/products/")===-1}getRelevantVariantIds(){return Array.from(document.querySelectorAll("[data-tomit-variant-id]")).map(el=>el.getAttribute("data-tomit-variant-id"))}async processVariant(container,variantId){console.debug(`Processing variant ${variantId}`);const geoloc=await this.getGeoLocation(),locations=await this.getVariantLocations(variantId,geoloc[0],geoloc[1]),displayLocations=this.filterLocations(locations);return container&&(this.isProductPage()&&this.settings.pickupEnabled?this.renderPickupLocations(container,displayLocations):this.renderLocations(container,displayLocations),this.hasAnyStock(displayLocations)||(this.hideInventoryBlock(container),this.displayUnavailableText(container))),displayLocations}async processProductVariant(){console.debug("Processing single variant");const container=document.getElementsByClassName("inventoryLocationLoading")[0],variantId=this.getVariantId(),displayLocations=await this.processVariant(container,variantId);this.updateATCButton(displayLocations)}async processVariantList(){console.debug("Processing variant list"),this.getRelevantVariantIds().forEach(variantId=>{const container=document.querySelector(`[data-tomit-variant-id='${variantId}']`);this.processVariant(container,variantId)})}applyCustomStyles(styles){console.debug("applyCustomStyles start");const style=document.createElement("style");styles=this.settings.displayCssCustomStyles??"",this.settings.displayBulletPointsHide&&(styles+=".inventoryLocationLoading li { list-style-type: none; }"),styles+=`.location { color: ${this.settings.displayLocationFontColor}; font-size: ${this.settings.displayLocationFontSize}px; }`,styles+=`.stockCount { color:${this.settings.displayInventoryFontColor}; font-size: ${this.settings.displayInventoryFontSize}px; }`,this.settings.displayLocStockText.length>0&&this.settings.displayLocStockText.forEach((item,index)=>{styles+=`.threshold-${index} { color: ${item.color_hex};}`}),this.settings.advancedCartPageWarningEnable&&(styles+="#multiplePickupWarning { background-color: #ffffd7; border: 1px solid gray; width: 100%; margin-bottom: 10px;padding: 7px; font-size: .8em; border-radius:10px; text-align:center;} #multiplePickupWarning small { display:block; }"),style.innerHTML=styles,document.head.appendChild(style),console.debug("applyCustomStyles end")}setVariantChangeEvents(){console.debug("setVariantChangeEvents start"),history.pushState=(f=>function(){f.apply(this,arguments),window.dispatchEvent(new Event("pushState")),window.dispatchEvent(new Event("locationchange"))})(history.pushState),history.replaceState=(f=>function(){f.apply(this,arguments),window.dispatchEvent(new Event("replaceState")),window.dispatchEvent(new Event("locationchange"))})(history.replaceState),window.addEventListener("popstate",()=>{window.dispatchEvent(new Event("locationchange"))}),console.debug("setVariantChangeEvents end")}bugsnagNotify(msg){typeof Bugsnag<"u"&&Bugsnag.notify(msg)}async showCartWarningMultiplePickup(){const cart=await this.fetchShopCartItems();!cart||!cart.items.some((item,index)=>item.properties&&cart.items[0].properties&&item.properties["Shipping Option"]!==cart.items[0].properties["Shipping Option"])||this.renderWarningMessage(this.settings.cartWarningMultiplePickupTitle,this.settings.cartWarningMultiplePickupMessage)}renderWarningMessage(title,message){const firstDiv=document.createElement("div"),dataDiv=document.createElement("div");var strong=document.createElement("strong"),small=document.createElement("small");firstDiv.style.width="100%",firstDiv.appendChild(dataDiv),strong.innerHTML=title,small.innerHTML=message,dataDiv.id="multiplePickupWarning",strong.append(small),dataDiv.append(strong);const checkout=document.getElementsByName("checkout");checkout.length>0&&(checkout[checkout.length-1].parentNode.insertBefore(firstDiv,checkout[checkout.length-1]),this.settings.cartDisableCheckout&&(checkout[checkout.length-1].disabled=!0))}async showCartWarningOneLocation(){const cart=await this.fetchShopCartItems();if(!cart)return;var locations=[];for(const item of cart.items){const variantLocations=await this.getVariantLocations(item.variant_id);locations[item.variant_id]=variantLocations}let validLocations=[];cart.items.forEach(item=>{const variantLocations=locations[item.variant_id];console.debug(`Variant ${item.variant_id} locations:`,variantLocations);const validVariantLocations=variantLocations.filter(location2=>location2.stock>0&&!location2.disabled);validLocations.length===0?validLocations=validVariantLocations:validLocations=validLocations.filter(location2=>validVariantLocations.some(validLocation=>validLocation.id===location2.id))}),validLocations.length===0?this.showCartWarningInvalidLocation():this.hideCartWarningInvalidLocation()}showCartWarningInvalidLocation(){this.renderWarningMessage(this.settings.cartWarningInvalidLocationTitle,this.settings.cartWarningInvalidLocationMessage)}hideCartWarningInvalidLocation(){var multipleLocationWarning=document.getElementById("multipleLocationWarning");if(multipleLocationWarning){multipleLocationWarning.parentNode.removeChild(multipleLocationWarning);var checkout=document.getElementsByName("checkout");checkout[0].disabled=!1}}}var jtcProductInventoryInfo=new ProductInventoryInfo});
//# sourceMappingURL=/cdn/shop/t/31/assets/inventory.js.map?v=107439608927330919921682086312
